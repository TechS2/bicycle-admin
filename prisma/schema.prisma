generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Cart {
  id       Int        @id @default(autoincrement())
  orderId  Int
  Order    Order      @relation(fields: [orderId], references: [id])
  CartItem CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  size      String?
  startDate String
  endDate   String
  dif       Int
  quantity  Int
  productId Int
  cartId    Int
  Cart      Cart    @relation(fields: [cartId], references: [id])
  Product   Product @relation(fields: [productId], references: [id])
}

model Order {
  id            Int     @id @default(autoincrement())
  captureId     String  @unique
  amount        Float
  status        Boolean @default(false)
  paymentEmail  String
  personalEmail String
  arrivalTime   String  @default("")
  firstName     String  @default("")
  lastName      String  @default("")
  option        String  @default("")
  Cart          Cart[]
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  code        String     @unique
  image       String
  description String
  price       String
  size        String
  CartItem    CartItem[]
}

model Seller {
  id         Int     @id @default(autoincrement())
  trackingId String  @unique
  merchantId String
  status     Boolean @default(false)
}

model SellerInfo {
  id       Int    @id @default(autoincrement())
  userName String @unique
  password String
}
