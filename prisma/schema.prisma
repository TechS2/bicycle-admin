generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Order {
  captureId     String      @unique
  amount        Float
  status        Boolean     @default(false)
  paymentEmail  String      @default("")
  personalEmail String
  arrivalTime   String      @default("")
  firstName     String      @default("")
  lastName      String      @default("")
  option        String      @default("")
  payerId       String      @default("")
  paymentId     String      @default("")
  id            Int         @id @default(autoincrement())
  arrivalDate   String      @default("")
  OrderItem     OrderItem[]
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  code        String      @unique
  image       String
  description String
  price       String
  size        String
  active      Boolean     @default(true)
  OrderItem   OrderItem[]
}

model Seller {
  id                Int    @id @default(autoincrement())
  trackingId        String @unique
  merchantId        String
  partner_client_id String
  email             String @unique
}

model SellerInfo {
  id       Int    @id @default(autoincrement())
  userName String @unique
  password String
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  size      String?
  startDate String
  endDate   String
  dif       Int
  quantity  Int
  productId Int
  orderId   Int
  Event     Event[]
  Order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  Product   Product @relation(fields: [productId], references: [id])
}

model Event {
  id          Int       @id @default(autoincrement())
  startDate   String
  endDate     String
  description String
  title       String
  orderItemId Int
  isAdded     Boolean   @default(false)
  OrderItem   OrderItem @relation(fields: [orderItemId], references: [id])
}

model GoogleToken {
  tokenId      Int    @id @default(autoincrement())
  refreshToken String @default("")
}
